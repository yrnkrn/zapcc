name: build_binaries_on_release_branch_push

on:
  push:
    branches: 
      - release/*

jobs:
  build_Linux:
    continue-on-error: true
    name: Ubuntu build
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v2
      name: Checkout repository
    - name: Get Env
      run: |
        env
        set
        uname -a
        cat /etc/*release*
        lscpu
        echo "nproc=$(nproc)"
        sudo dmidecode
        lsmem
        free -h
        df -h
        ls -kahl
    - name: Install ninja, ocaml, and co. 
    # actually, all but ninja should be installed - see https://help.github.com/en/articles/software-in-virtual-environments-for-github-actions#ubuntu-1804-lts
    # https://github.com/actions/virtual-environments/blob/master/images/linux/Ubuntu2004-README.md
    # sudo apt-get upgrade -y # do not run upgrade on all outdated packages...
      run: |
        export ACCEPT_EULA=Y
        sudo apt-get update
        sudo apt-get install -y ninja-build ocaml lbzip2
        sudo pip3 install pygments pyyaml
    - name: Configure and build
      run: |
        echo ======{,,," Configure and build ",,,}
        mkdir -pv $RUNNER_WORKSPACE/build
        cd $RUNNER_WORKSPACE/build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_WARNINGS=OFF $GITHUB_WORKSPACE
        ninja
        du -hs ./
        cd .. && tar -c -I lbzip2 -f $GITHUB_WORKSPACE/github-actions-build-ubuntu-20.04.tar.bz2 ./build
        ls -hl $GITHUB_WORKSPACE/github-actions-build-ubuntu-20.04.tar.bz2
    - name: Publish artifacts (i.e. binaries after compilation)
      uses: actions/upload-artifact@v2
      with: 
        name: Ubuntu_build
        path: github-actions-build-ubuntu-20.04.tar.bz2
    - name: Run all tests
      run: |
        echo ======{,,," Run all tests ",,,}
        mkdir -pv $RUNNER_WORKSPACE/tests
        cd $RUNNER_WORKSPACE/build/
        ninja check-all 2>&1 | tee $GITHUB_WORKSPACE/check-all-ubuntu-20.04.log
    - name: Publish test results
      uses: actions/upload-artifact@v2
      with: 
        name: Ubuntu_tests
        path: check-all-ubuntu-20.04.log

  build_macOS:
    continue-on-error: true
    name: macOS build 
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout repository
      - name: Get Env
        run: |
          env
          set
          uname -a
          sw_vers
          xcodebuild -version
          system_profiler -timeout 30 -detailLevel basic
          df -h
          ls -kahl
      - name: Install ninja and ocaml
        run: |
          export ACCEPT_EULA=Y
          brew install ninja ocaml lbzip2 gnu-tar
          pip3 install pygments pyyaml
          export CC=$(which clang)
          export CXX=$(which clang++)
      - name: Configure and build
        run: |
          echo ======{,,," Configure and build ",,,}
          mkdir -pv $RUNNER_WORKSPACE/build
          cd $RUNNER_WORKSPACE/build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_WARNINGS=OFF $GITHUB_WORKSPACE
          ninja
          du -hs ./
          cd .. && gtar -c -I lbzip2 -f $GITHUB_WORKSPACE/github-actions-build-macOS.tar.bz2 ./build
          ls -hl $GITHUB_WORKSPACE/github-actions-build-macOS.tar.bz2
      - name: Publish artifacts (i.e. binaries after compilation)
        uses: actions/upload-artifact@v2
        with: 
          name: macOS_build
          path: github-actions-build-macOS.tar.bz2
      - name: Run all checks
        run: |
          echo ======{,,," Run all tests ",,,}
          mkdir -pv $RUNNER_WORKSPACE/tests
          cd $RUNNER_WORKSPACE/build
          ninja check-all 2>&1 | tee $GITHUB_WORKSPACE/check-all-macOS.log
      - name: Publish test results
        uses: actions/upload-artifact@v2
        with: 
          name: macOS_tests
          path: check-all-macOS.log
